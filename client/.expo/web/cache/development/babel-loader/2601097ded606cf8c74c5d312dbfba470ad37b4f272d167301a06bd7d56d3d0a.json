{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTheme } from \"../theme/ThemeContext\";\nimport Card from \"../components/common/Card\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    notifications = _React$useState2[0],\n    setNotifications = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    biometric = _React$useState4[0],\n    setBiometric = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    location = _React$useState6[0],\n    setLocation = _React$useState6[1];\n  var settingsSections = [{\n    title: 'Appearance',\n    items: [{\n      icon: 'theme-light-dark',\n      title: 'Dark Mode',\n      type: 'switch',\n      value: isDarkMode,\n      onValueChange: toggleTheme\n    }]\n  }, {\n    title: 'Notifications',\n    items: [{\n      icon: 'bell-outline',\n      title: 'Push Notifications',\n      type: 'switch',\n      value: notifications,\n      onValueChange: setNotifications\n    }, {\n      icon: 'email-outline',\n      title: 'Email Notifications',\n      type: 'switch',\n      value: notifications,\n      onValueChange: setNotifications\n    }]\n  }, {\n    title: 'Security',\n    items: [{\n      icon: 'fingerprint',\n      title: 'Biometric Authentication',\n      type: 'switch',\n      value: biometric,\n      onValueChange: setBiometric\n    }, {\n      icon: 'lock-outline',\n      title: 'Change Password',\n      type: 'link',\n      onPress: function onPress() {}\n    }]\n  }, {\n    title: 'Privacy',\n    items: [{\n      icon: 'map-marker-outline',\n      title: 'Location Services',\n      type: 'switch',\n      value: location,\n      onValueChange: setLocation\n    }, {\n      icon: 'shield-outline',\n      title: 'Privacy Policy',\n      type: 'link',\n      onPress: function onPress() {}\n    }]\n  }];\n  var renderSettingItem = function renderSettingItem(item) {\n    return _jsxs(View, {\n      style: styles.settingItem,\n      children: [_jsxs(View, {\n        style: styles.settingItemLeft,\n        children: [_jsx(Icon, {\n          name: item.icon,\n          size: 24,\n          color: theme.colors.textSecondary\n        }), _jsx(Text, {\n          style: [styles.settingItemText, {\n            color: theme.colors.text\n          }],\n          children: item.title\n        })]\n      }), item.type === 'switch' ? _jsx(Switch, {\n        value: item.value,\n        onValueChange: item.onValueChange,\n        trackColor: {\n          false: theme.colors.border,\n          true: theme.colors.primary\n        },\n        thumbColor: theme.colors.white\n      }) : _jsx(Icon, {\n        name: \"chevron-right\",\n        size: 24,\n        color: theme.colors.textSecondary\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    contentContainerStyle: styles.content,\n    children: [settingsSections.map(function (section, index) {\n      return _jsxs(Card, {\n        style: styles.sectionCard,\n        children: [_jsx(Text, {\n          style: [styles.sectionTitle, {\n            color: theme.colors.text\n          }],\n          children: section.title\n        }), section.items.map(function (item, itemIndex) {\n          return _jsxs(View, {\n            children: [itemIndex > 0 && _jsx(View, {\n              style: [styles.divider, {\n                backgroundColor: theme.colors.border\n              }]\n            }), item.type === 'link' ? _jsx(TouchableOpacity, {\n              style: styles.settingItem,\n              onPress: item.onPress,\n              children: renderSettingItem(item)\n            }) : renderSettingItem(item)]\n          }, itemIndex);\n        })]\n      }, index);\n    }), _jsx(Text, {\n      style: [styles.version, {\n        color: theme.colors.textSecondary\n      }],\n      children: \"Version 1.0.0\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  content: {\n    padding: 16\n  },\n  sectionCard: {\n    marginBottom: 16\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 16\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12\n  },\n  settingItemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  settingItemText: {\n    fontSize: 16,\n    marginLeft: 12\n  },\n  divider: {\n    height: 1,\n    marginVertical: 4\n  },\n  version: {\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 16\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","View","StyleSheet","ScrollView","Text","Switch","TouchableOpacity","useTheme","Card","Icon","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useTheme","theme","isDarkMode","toggleTheme","_React$useState","useState","_React$useState2","_slicedToArray","notifications","setNotifications","_React$useState3","_React$useState4","biometric","setBiometric","_React$useState5","_React$useState6","location","setLocation","settingsSections","title","items","icon","type","value","onValueChange","onPress","renderSettingItem","item","style","styles","settingItem","children","settingItemLeft","name","size","color","colors","textSecondary","settingItemText","text","trackColor","false","border","true","primary","thumbColor","white","container","backgroundColor","background","contentContainerStyle","content","map","section","index","sectionCard","sectionTitle","itemIndex","divider","version","create","flex","padding","marginBottom","fontSize","fontWeight","flexDirection","justifyContent","alignItems","paddingVertical","marginLeft","height","marginVertical","textAlign","marginTop"],"sources":["C:/Users/A R Khan/OneDrive/Documents/Trae/Joy-Hacks/client/src/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Text,\r\n  Switch,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { useTheme } from '../theme/ThemeContext';\r\nimport Card from '../components/common/Card';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst SettingsScreen = () => {\r\n  const { theme, isDarkMode, toggleTheme } = useTheme();\r\n  const [notifications, setNotifications] = React.useState(true);\r\n  const [biometric, setBiometric] = React.useState(false);\r\n  const [location, setLocation] = React.useState(true);\r\n\r\n  const settingsSections = [\r\n    {\r\n      title: 'Appearance',\r\n      items: [\r\n        {\r\n          icon: 'theme-light-dark',\r\n          title: 'Dark Mode',\r\n          type: 'switch',\r\n          value: isDarkMode,\r\n          onValueChange: toggleTheme,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Notifications',\r\n      items: [\r\n        {\r\n          icon: 'bell-outline',\r\n          title: 'Push Notifications',\r\n          type: 'switch',\r\n          value: notifications,\r\n          onValueChange: setNotifications,\r\n        },\r\n        {\r\n          icon: 'email-outline',\r\n          title: 'Email Notifications',\r\n          type: 'switch',\r\n          value: notifications,\r\n          onValueChange: setNotifications,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Security',\r\n      items: [\r\n        {\r\n          icon: 'fingerprint',\r\n          title: 'Biometric Authentication',\r\n          type: 'switch',\r\n          value: biometric,\r\n          onValueChange: setBiometric,\r\n        },\r\n        {\r\n          icon: 'lock-outline',\r\n          title: 'Change Password',\r\n          type: 'link',\r\n          onPress: () => {},\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Privacy',\r\n      items: [\r\n        {\r\n          icon: 'map-marker-outline',\r\n          title: 'Location Services',\r\n          type: 'switch',\r\n          value: location,\r\n          onValueChange: setLocation,\r\n        },\r\n        {\r\n          icon: 'shield-outline',\r\n          title: 'Privacy Policy',\r\n          type: 'link',\r\n          onPress: () => {},\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const renderSettingItem = (item) => {\r\n    return (\r\n      <View style={styles.settingItem}>\r\n        <View style={styles.settingItemLeft}>\r\n          <Icon\r\n            name={item.icon}\r\n            size={24}\r\n            color={theme.colors.textSecondary}\r\n          />\r\n          <Text style={[styles.settingItemText, { color: theme.colors.text }]}>\r\n            {item.title}\r\n          </Text>\r\n        </View>\r\n        {item.type === 'switch' ? (\r\n          <Switch\r\n            value={item.value}\r\n            onValueChange={item.onValueChange}\r\n            trackColor={{\r\n              false: theme.colors.border,\r\n              true: theme.colors.primary,\r\n            }}\r\n            thumbColor={theme.colors.white}\r\n          />\r\n        ) : (\r\n          <Icon\r\n            name=\"chevron-right\"\r\n            size={24}\r\n            color={theme.colors.textSecondary}\r\n          />\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\r\n      contentContainerStyle={styles.content}\r\n    >\r\n      {settingsSections.map((section, index) => (\r\n        <Card key={index} style={styles.sectionCard}>\r\n          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>\r\n            {section.title}\r\n          </Text>\r\n          {section.items.map((item, itemIndex) => (\r\n            <View key={itemIndex}>\r\n              {itemIndex > 0 && (\r\n                <View\r\n                  style={[\r\n                    styles.divider,\r\n                    { backgroundColor: theme.colors.border },\r\n                  ]}\r\n                />\r\n              )}\r\n              {item.type === 'link' ? (\r\n                <TouchableOpacity\r\n                  style={styles.settingItem}\r\n                  onPress={item.onPress}\r\n                >\r\n                  {renderSettingItem(item)}\r\n                </TouchableOpacity>\r\n              ) : (\r\n                renderSettingItem(item)\r\n              )}\r\n            </View>\r\n          ))}\r\n        </Card>\r\n      ))}\r\n\r\n      <Text style={[styles.version, { color: theme.colors.textSecondary }]}>\r\n        Version 1.0.0\r\n      </Text>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    padding: 16,\r\n  },\r\n  sectionCard: {\r\n    marginBottom: 16,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginBottom: 16,\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n  },\r\n  settingItemLeft: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  settingItemText: {\r\n    fontSize: 16,\r\n    marginLeft: 12,\r\n  },\r\n  divider: {\r\n    height: 1,\r\n    marginVertical: 4,\r\n  },\r\n  version: {\r\n    textAlign: 'center',\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n  },\r\n});\r\n\r\nexport default SettingsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}