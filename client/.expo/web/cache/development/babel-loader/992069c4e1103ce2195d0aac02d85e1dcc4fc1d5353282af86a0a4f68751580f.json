{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport Config from 'react-native-config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar api = axios.create({\n  baseURL: Config.API_BASE_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(function () {\n  var _ref = _asyncToGenerator(function* (config) {\n    var token = yield AsyncStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\nexport var fetchVideos = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var response = yield api.get('/videos/feed');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.error) || 'Failed to fetch videos');\n    }\n  });\n  return function fetchVideos() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default {\n  fetchVideos: fetchVideos\n};","map":{"version":3,"names":["axios","Config","AsyncStorage","api","create","baseURL","API_BASE_URL","timeout","headers","interceptors","request","use","_ref","_asyncToGenerator","config","token","getItem","Authorization","_x","apply","arguments","error","Promise","reject","fetchVideos","_ref2","response","get","data","_error$response","_error$response$data","Error"],"sources":["C:/Users/A R Khan/OneDrive/Documents/Trae/Joy-Hacks/client/src/api/apiService.js"],"sourcesContent":["import axios from 'axios';\r\nimport Config from 'react-native-config';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst api = axios.create({\r\n  baseURL: Config.API_BASE_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  }\r\n});\r\n\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    const token = await AsyncStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport const fetchVideos = async () => {\r\n  try {\r\n    const response = await api.get('/videos/feed');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.error || 'Failed to fetch videos');\r\n  }\r\n};\r\n\r\n// Add more API functions as needed\r\nexport default {\r\n  fetchVideos,\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAEJ,MAAM,CAACK,YAAY,IAAI,2BAA2B;EAC3DC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAC1B,WAAOC,MAAM,EAAK;IAChB,IAAMC,KAAK,SAASb,YAAY,CAACc,OAAO,CAAC,WAAW,CAAC;IACrD,IAAID,KAAK,EAAE;MACTD,MAAM,CAACN,OAAO,CAACS,aAAa,GAAG,UAAUF,KAAK,EAAE;IAClD;IACA,OAAOD,MAAM;EACf,CAAC;EAAA,iBAAAI,EAAA;IAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;EAAA;AAAA,KACD,UAACC,KAAK;EAAA,OAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAAA,CAClC,CAAC;AAED,OAAO,IAAMG,WAAW;EAAA,IAAAC,KAAA,GAAAZ,iBAAA,CAAG,aAAY;IACrC,IAAI;MACF,IAAMa,QAAQ,SAASvB,GAAG,CAACwB,GAAG,CAAC,cAAc,CAAC;MAC9C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MAAA,IAAAQ,eAAA,EAAAC,oBAAA;MACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAR,KAAK,CAACK,QAAQ,sBAAAI,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,qBAApBE,oBAAA,CAAsBT,KAAK,KAAI,wBAAwB,CAAC;IAC1E;EACF,CAAC;EAAA,gBAPYG,WAAWA,CAAA;IAAA,OAAAC,KAAA,CAAAN,KAAA,OAAAC,SAAA;EAAA;AAAA,GAOvB;AAGD,eAAe;EACbI,WAAW,EAAXA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}