{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { useTheme } from \"../theme/ThemeContext\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarStyle: {\n        backgroundColor: theme.colors.surface,\n        borderTopColor: theme.colors.border\n      },\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveTintColor: theme.colors.textSecondary,\n      headerStyle: {\n        backgroundColor: theme.colors.surface\n      },\n      headerTintColor: theme.colors.text\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Icon, {\n            name: \"home\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Icon, {\n            name: \"account\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Icon, {\n            name: \"cog\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useTheme2 = useTheme(),\n    theme = _useTheme2.theme;\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: theme.colors.surface\n        },\n        headerTintColor: theme.colors.text,\n        headerShadowVisible: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"MainApp\",\n        component: TabNavigator,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","useTheme","Icon","HomeScreen","ProfileScreen","SettingsScreen","LoginScreen","RegisterScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","TabNavigator","_useTheme","theme","Navigator","screenOptions","tabBarStyle","backgroundColor","colors","surface","borderTopColor","border","tabBarActiveTintColor","primary","tabBarInactiveTintColor","textSecondary","headerStyle","headerTintColor","text","children","Screen","name","component","options","tabBarIcon","_ref","color","size","_ref2","_ref3","AppNavigator","_useTheme2","headerShadowVisible","headerShown"],"sources":["C:/Users/A R Khan/OneDrive/Documents/Trae/Joy-Hacks/client/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useTheme } from '../theme/ThemeContext';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n// Import screens (we'll create these next)\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/RegisterScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarStyle: {\r\n          backgroundColor: theme.colors.surface,\r\n          borderTopColor: theme.colors.border,\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: theme.colors.textSecondary,\r\n        headerStyle: {\r\n          backgroundColor: theme.colors.surface,\r\n        },\r\n        headerTintColor: theme.colors.text,\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"account\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"cog\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: theme.colors.surface,\r\n          },\r\n          headerTintColor: theme.colors.text,\r\n          headerShadowVisible: false,\r\n        }}\r\n      >\r\n        <Stack.Screen\r\n          name=\"Login\"\r\n          component={LoginScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"Register\"\r\n          component={RegisterScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"MainApp\"\r\n          component={TabNavigator}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ;AACjB,OAAOC,IAAI;AAGX,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AAAkC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEvD,IAAMC,KAAK,GAAGb,0BAA0B,CAAC,CAAC;AAC1C,IAAMc,GAAG,GAAGb,wBAAwB,CAAC,CAAC;AAEtC,IAAMc,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAkBd,QAAQ,CAAC,CAAC;IAApBe,KAAK,GAAAD,SAAA,CAALC,KAAK;EAEb,OACEL,KAAA,CAACE,GAAG,CAACI,SAAS;IACZC,aAAa,EAAE;MACbC,WAAW,EAAE;QACXC,eAAe,EAAEJ,KAAK,CAACK,MAAM,CAACC,OAAO;QACrCC,cAAc,EAAEP,KAAK,CAACK,MAAM,CAACG;MAC/B,CAAC;MACDC,qBAAqB,EAAET,KAAK,CAACK,MAAM,CAACK,OAAO;MAC3CC,uBAAuB,EAAEX,KAAK,CAACK,MAAM,CAACO,aAAa;MACnDC,WAAW,EAAE;QACXT,eAAe,EAAEJ,KAAK,CAACK,MAAM,CAACC;MAChC,CAAC;MACDQ,eAAe,EAAEd,KAAK,CAACK,MAAM,CAACU;IAChC,CAAE;IAAAC,QAAA,GAEFvB,IAAA,CAACI,GAAG,CAACoB,MAAM;MACTC,IAAI,EAAC,MAAM;MACXC,SAAS,EAAEhC,UAAW;MACtBiC,OAAO,EAAE;QACPC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;UAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;UAAA,OACxB/B,IAAA,CAACP,IAAI;YAACgC,IAAI,EAAC,MAAM;YAACM,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAElD;IAAE,CACH,CAAC,EACF9B,IAAA,CAACI,GAAG,CAACoB,MAAM;MACTC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAE/B,aAAc;MACzBgC,OAAO,EAAE;QACPC,UAAU,EAAE,SAAZA,UAAUA,CAAAI,KAAA;UAAA,IAAKF,KAAK,GAAAE,KAAA,CAALF,KAAK;YAAEC,IAAI,GAAAC,KAAA,CAAJD,IAAI;UAAA,OACxB/B,IAAA,CAACP,IAAI;YAACgC,IAAI,EAAC,SAAS;YAACM,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAErD;IAAE,CACH,CAAC,EACF9B,IAAA,CAACI,GAAG,CAACoB,MAAM;MACTC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAE9B,cAAe;MAC1B+B,OAAO,EAAE;QACPC,UAAU,EAAE,SAAZA,UAAUA,CAAAK,KAAA;UAAA,IAAKH,KAAK,GAAAG,KAAA,CAALH,KAAK;YAAEC,IAAI,GAAAE,KAAA,CAAJF,IAAI;UAAA,OACxB/B,IAAA,CAACP,IAAI;YAACgC,IAAI,EAAC,KAAK;YAACM,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEjD;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB,CAAC;AAED,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,UAAA,GAAkB3C,QAAQ,CAAC,CAAC;IAApBe,KAAK,GAAA4B,UAAA,CAAL5B,KAAK;EAEb,OACEP,IAAA,CAACX,mBAAmB;IAAAkC,QAAA,EAClBrB,KAAA,CAACC,KAAK,CAACK,SAAS;MACdC,aAAa,EAAE;QACbW,WAAW,EAAE;UACXT,eAAe,EAAEJ,KAAK,CAACK,MAAM,CAACC;QAChC,CAAC;QACDQ,eAAe,EAAEd,KAAK,CAACK,MAAM,CAACU,IAAI;QAClCc,mBAAmB,EAAE;MACvB,CAAE;MAAAb,QAAA,GAEFvB,IAAA,CAACG,KAAK,CAACqB,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAE7B,WAAY;QACvB8B,OAAO,EAAE;UAAEU,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,EACFrC,IAAA,CAACG,KAAK,CAACqB,MAAM;QACXC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAE5B,cAAe;QAC1B6B,OAAO,EAAE;UAAEU,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,EACFrC,IAAA,CAACG,KAAK,CAACqB,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAErB,YAAa;QACxBsB,OAAO,EAAE;UAAEU,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC;IAAA,CACa;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}