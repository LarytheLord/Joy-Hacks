{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { ThemeProvider, Provider as PaperProvider } from 'react-native-paper';\nimport { theme } from \"./theme/Theme\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AuthScreen from \"./screens/AuthScreen\";\nimport FeedScreen from \"./screens/FeedScreen\";\nimport CreateVideoScreen from \"./screens/CreateVideoScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport VideoPlayerScreen from \"./screens/VideoPlayerScreen\";\nimport CommentsScreen from \"./screens/CommentsScreen\";\nimport EditProfileScreen from \"./screens/EditProfileScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabs = function MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Feed') {\n            iconName = 'home';\n          } else if (route.name === 'Create') {\n            iconName = 'plus-circle';\n          } else if (route.name === 'Profile') {\n            iconName = 'account';\n          }\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Feed\",\n      component: FeedScreen,\n      options: {\n        headerTitle: 'Code Reels'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Create\",\n      component: CreateVideoScreen,\n      options: {\n        headerTitle: 'Create Reel'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerTitle: 'My Profile'\n      }\n    })]\n  });\n};\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('authToken');\n          setIsLoggedIn(!!token);\n        } catch (error) {\n          console.error('Error checking login status:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n  }, []);\n  if (isLoading) {\n    return null;\n  }\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: isLoggedIn ? 'Main' : 'Auth',\n        children: [_jsx(Stack.Screen, {\n          name: \"Auth\",\n          component: AuthScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainTabs,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"VideoPlayer\",\n          component: VideoPlayerScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Comments\",\n          component: CommentsScreen,\n          options: {\n            headerTitle: 'Comments'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EditProfile\",\n          component: EditProfileScreen,\n          options: {\n            headerTitle: 'Edit Profile'\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","ThemeProvider","Provider","PaperProvider","theme","Icon","AsyncStorage","AuthScreen","FeedScreen","CreateVideoScreen","ProfileScreen","VideoPlayerScreen","CommentsScreen","EditProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","children","Screen","component","options","headerTitle","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","checkLoginStatus","_ref3","_asyncToGenerator","token","getItem","error","console","apply","arguments","initialRouteName","headerShown"],"sources":["C:/Users/A R Khan/OneDrive/Documents/Trae/Joy-Hacks/client/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { ThemeProvider, Provider as PaperProvider } from 'react-native-paper';\r\nimport { theme } from './theme/Theme';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Screens\r\nimport AuthScreen from './screens/AuthScreen';\r\nimport FeedScreen from './screens/FeedScreen';\r\nimport CreateVideoScreen from './screens/CreateVideoScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport VideoPlayerScreen from './screens/VideoPlayerScreen';\r\nimport CommentsScreen from './screens/CommentsScreen';\r\nimport EditProfileScreen from './screens/EditProfileScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabs = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Feed') {\r\n            iconName = 'home';\r\n          } else if (route.name === 'Create') {\r\n            iconName = 'plus-circle';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = 'account';\r\n          }\r\n\r\n          return <Icon name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: 'gray',\r\n      })}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Feed\" \r\n        component={FeedScreen} \r\n        options={{ headerTitle: 'Code Reels' }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Create\" \r\n        component={CreateVideoScreen} \r\n        options={{ headerTitle: 'Create Reel' }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen} \r\n        options={{ headerTitle: 'My Profile' }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    const checkLoginStatus = async () => {\r\n      try {\r\n        const token = await AsyncStorage.getItem('authToken');\r\n        setIsLoggedIn(!!token);\r\n      } catch (error) {\r\n        console.error('Error checking login status:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return null; // Or a loading screen\r\n  }\r\n\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator initialRouteName={isLoggedIn ? 'Main' : 'Auth'}>\r\n          <Stack.Screen \r\n            name=\"Auth\" \r\n            component={AuthScreen} \r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"Main\" \r\n            component={MainTabs}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"VideoPlayer\" \r\n            component={VideoPlayerScreen}\r\n            options={{ headerShown: false }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"Comments\" \r\n            component={CommentsScreen}\r\n            options={{ headerTitle: 'Comments' }}\r\n          />\r\n          <Stack.Screen \r\n            name=\"EditProfile\" \r\n            component={EditProfileScreen}\r\n            options={{ headerTitle: 'Edit Profile' }}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </PaperProvider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}