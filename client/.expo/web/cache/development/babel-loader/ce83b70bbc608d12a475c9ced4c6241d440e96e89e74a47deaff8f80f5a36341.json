{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useTheme } from \"../../theme/ThemeContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var onPress = _ref.onPress,\n    title = _ref.title,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    style = _ref.style,\n    textStyle = _ref.textStyle;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var getButtonStyle = function getButtonStyle() {\n    var baseStyle = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, styles.button), variant === 'primary' && {\n      backgroundColor: theme.colors.primary\n    }), variant === 'secondary' && {\n      backgroundColor: 'transparent',\n      borderWidth: 1,\n      borderColor: theme.colors.primary\n    }), size === 'small' && {\n      paddingVertical: 8,\n      paddingHorizontal: 16\n    }), size === 'medium' && {\n      paddingVertical: 12,\n      paddingHorizontal: 24\n    }), size === 'large' && {\n      paddingVertical: 16,\n      paddingHorizontal: 32\n    }), disabled && {\n      opacity: 0.5\n    });\n    return [baseStyle, style];\n  };\n  var getTextStyle = function getTextStyle() {\n    var baseStyle = _objectSpread(_objectSpread(_objectSpread({}, styles.text), variant === 'primary' && {\n      color: theme.colors.white\n    }), variant === 'secondary' && {\n      color: theme.colors.primary\n    });\n    return [baseStyle, textStyle];\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    style: getButtonStyle(),\n    disabled: disabled,\n    activeOpacity: 0.8,\n    children: _jsx(Text, {\n      style: getTextStyle(),\n      children: title\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});\nexport default Button;","map":{"version":3,"names":["React","StyleSheet","TouchableOpacity","Text","useTheme","jsx","_jsx","Button","_ref","onPress","title","_ref$variant","variant","_ref$size","size","_ref$disabled","disabled","style","textStyle","_useTheme","theme","getButtonStyle","baseStyle","_objectSpread","styles","button","backgroundColor","colors","primary","borderWidth","borderColor","paddingVertical","paddingHorizontal","opacity","getTextStyle","text","color","white","activeOpacity","children","create","borderRadius","alignItems","justifyContent","fontSize","fontWeight"],"sources":["C:/Users/A R Khan/OneDrive/Documents/Trae/Joy-Hacks/client/src/components/common/Button.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet, TouchableOpacity, Text } from 'react-native';\r\nimport { useTheme } from '../../theme/ThemeContext';\r\n\r\nconst Button = ({ \r\n  onPress, \r\n  title, \r\n  variant = 'primary', \r\n  size = 'medium',\r\n  disabled = false,\r\n  style,\r\n  textStyle\r\n}) => {\r\n  const { theme } = useTheme();\r\n\r\n  const getButtonStyle = () => {\r\n    const baseStyle = {\r\n      ...styles.button,\r\n      ...(variant === 'primary' && {\r\n        backgroundColor: theme.colors.primary,\r\n      }),\r\n      ...(variant === 'secondary' && {\r\n        backgroundColor: 'transparent',\r\n        borderWidth: 1,\r\n        borderColor: theme.colors.primary,\r\n      }),\r\n      ...(size === 'small' && {\r\n        paddingVertical: 8,\r\n        paddingHorizontal: 16,\r\n      }),\r\n      ...(size === 'medium' && {\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 24,\r\n      }),\r\n      ...(size === 'large' && {\r\n        paddingVertical: 16,\r\n        paddingHorizontal: 32,\r\n      }),\r\n      ...(disabled && {\r\n        opacity: 0.5,\r\n      }),\r\n    };\r\n\r\n    return [baseStyle, style];\r\n  };\r\n\r\n  const getTextStyle = () => {\r\n    const baseStyle = {\r\n      ...styles.text,\r\n      ...(variant === 'primary' && {\r\n        color: theme.colors.white,\r\n      }),\r\n      ...(variant === 'secondary' && {\r\n        color: theme.colors.primary,\r\n      }),\r\n    };\r\n\r\n    return [baseStyle, textStyle];\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={getButtonStyle()}\r\n      disabled={disabled}\r\n      activeOpacity={0.8}\r\n    >\r\n      <Text style={getTextStyle()}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default Button; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}